{"ast":null,"code":"var _jsxFileName = \"/home/posiden/Documents/GitHub/A.I.D.E.N/aiden_frontend/src/AddTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { db } from './firebaseConfig'; // Ensure this path is correct\nimport { collection, addDoc } from \"firebase/firestore\";\nimport './AddTaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [priority, setPriority] = useState('Medium');\n  const [status, setStatus] = useState('Not Started');\n  const [tags, setTags] = useState('');\n  const [hasSubtasks, setHasSubtasks] = useState(false);\n  const [subtasks, setSubtasks] = useState([{\n    id: Date.now(),\n    title: '',\n    completed: false\n  }]);\n  const handleSubtaskChange = (id, value) => {\n    const updatedSubtasks = subtasks.map(subtask => subtask.id === id ? {\n      ...subtask,\n      title: value\n    } : subtask);\n    setSubtasks(updatedSubtasks);\n  };\n  const addSubtask = () => {\n    setSubtasks([...subtasks, {\n      id: Date.now(),\n      title: '',\n      completed: false\n    }]);\n  };\n  const removeSubtask = id => {\n    setSubtasks(subtasks.filter(subtask => subtask.id !== id));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const taskTags = tags.split(',').map(tag => tag.trim());\n    try {\n      await addDoc(collection(db, \"tasks\"), {\n        title,\n        description,\n        dueDate,\n        priority,\n        status,\n        tags: taskTags,\n        subtasks: hasSubtasks ? subtasks : []\n      });\n      console.log(\"Task added!\");\n    } catch (error) {\n      console.error(\"Error adding task: \", error);\n    }\n    // Reset form fields\n    setTitle('');\n    setDescription('');\n    setDueDate('');\n    setPriority('Medium');\n    setStatus('Not Started');\n    setTags('');\n    setHasSubtasks(false);\n    setSubtasks([{\n      id: Date.now(),\n      title: '',\n      completed: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hasSubtasks\",\n          children: \"Does this task have subtasks?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"hasSubtasks\",\n          checked: hasSubtasks,\n          onChange: e => setHasSubtasks(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), hasSubtasks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtasks-container\",\n        children: [subtasks.map((subtask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtask\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Subtask title\",\n            value: subtask.title,\n            onChange: e => handleSubtaskChange(subtask.id, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeSubtask(subtask.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, subtask.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addSubtask,\n          children: \"Add Subtask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskForm, \"q5h4Pt9mURUH6+IehNkkqbey8Nw=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","jsxDEV","_jsxDEV","AddTaskForm","_s","title","setTitle","description","setDescription","dueDate","setDueDate","priority","setPriority","status","setStatus","tags","setTags","hasSubtasks","setHasSubtasks","subtasks","setSubtasks","id","Date","now","completed","handleSubtaskChange","value","updatedSubtasks","map","subtask","addSubtask","removeSubtask","filter","handleSubmit","e","preventDefault","taskTags","split","tag","trim","console","log","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","checked","onChange","target","index","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/home/posiden/Documents/GitHub/A.I.D.E.N/aiden_frontend/src/AddTaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { db } from './firebaseConfig'; // Ensure this path is correct\nimport { collection, addDoc } from \"firebase/firestore\";\nimport './AddTaskForm.css';\n\nconst AddTaskForm = () => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [priority, setPriority] = useState('Medium');\n    const [status, setStatus] = useState('Not Started');\n    const [tags, setTags] = useState('');\n    const [hasSubtasks, setHasSubtasks] = useState(false);\n    const [subtasks, setSubtasks] = useState([{ id: Date.now(), title: '', completed: false }]);\n\n    const handleSubtaskChange = (id, value) => {\n        const updatedSubtasks = subtasks.map(subtask => \n            subtask.id === id ? { ...subtask, title: value } : subtask\n        );\n        setSubtasks(updatedSubtasks);\n    };\n\n    const addSubtask = () => {\n        setSubtasks([...subtasks, { id: Date.now(), title: '', completed: false }]);\n    };\n\n    const removeSubtask = (id) => {\n        setSubtasks(subtasks.filter(subtask => subtask.id !== id));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const taskTags = tags.split(',').map(tag => tag.trim());\n        try {\n            await addDoc(collection(db, \"tasks\"), {\n                title,\n                description,\n                dueDate,\n                priority,\n                status,\n                tags: taskTags,\n                subtasks: hasSubtasks ? subtasks : [],\n            });\n            console.log(\"Task added!\");\n        } catch (error) {\n            console.error(\"Error adding task: \", error);\n        }\n        // Reset form fields\n        setTitle('');\n        setDescription('');\n        setDueDate('');\n        setPriority('Medium');\n        setStatus('Not Started');\n        setTags('');\n        setHasSubtasks(false);\n        setSubtasks([{ id: Date.now(), title: '', completed: false }]);\n    };\n\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={handleSubmit} className=\"task-form\">\n                <h2>Add a New Task</h2>\n                {/* Existing form groups for task details */}\n                {/* New section for subtasks */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"hasSubtasks\">Does this task have subtasks?</label>\n                    <input\n                        type=\"checkbox\"\n                        id=\"hasSubtasks\"\n                        checked={hasSubtasks}\n                        onChange={(e) => setHasSubtasks(e.target.checked)}\n                    />\n                </div>\n                {hasSubtasks && (\n                    <div className=\"subtasks-container\">\n                        {subtasks.map((subtask, index) => (\n                            <div key={subtask.id} className=\"subtask\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Subtask title\"\n                                    value={subtask.title}\n                                    onChange={(e) => handleSubtaskChange(subtask.id, e.target.value)}\n                                    required\n                                />\n                                <button type=\"button\" onClick={() => removeSubtask(subtask.id)}>Remove</button>\n                            </div>\n                        ))}\n                        <button type=\"button\" onClick={addSubtask}>Add Subtask</button>\n                    </div>\n                )}\n                <button type=\"submit\">Add Task</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddTaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}