{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9p84YFSaRrWYI5c2Dm4CwmgtJuWTys9g\",\n  authDomain: \"aiden-shiv.firebaseapp.com\",\n  projectId: \"aiden-shiv\",\n  storageBucket: \"aiden-shiv.appspot.com\",\n  messagingSenderId: \"701389143848\",\n  appId: \"1:701389143848:web:3cc71c72b92baac7d55a1d\",\n  measurementId: \"G-RNTHBZZKJ2\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst auth = getAuth(app);\n\n// Define signInWithGoogle\nconst provider = new GoogleAuthProvider();\nconst signInWithGoogle = () => signInWithPopup(auth, provider).then(result => {\n  // This gives you a Google Access Token. You can use it to access the Google API.\n  const credential = GoogleAuthProvider.credentialFromResult(result);\n  const token = credential.accessToken;\n  // The signed-in user info.\n  const user = result.user;\n  // ...\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message;\n  // The email of the user's account used.\n  const email = error.email;\n  // The AuthCredential type that was used.\n  const credential = GoogleAuthProvider.credentialFromError(error);\n  // ...\n});\n\n// Export auth and signInWithGoogle\nexport { auth, signInWithGoogle };","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","provider","signInWithGoogle","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"sources":["/home/posiden/Documents/GitHub/A.I.D.E.N/aiden_frontend/src/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9p84YFSaRrWYI5c2Dm4CwmgtJuWTys9g\",\n  authDomain: \"aiden-shiv.firebaseapp.com\",\n  projectId: \"aiden-shiv\",\n  storageBucket: \"aiden-shiv.appspot.com\",\n  messagingSenderId: \"701389143848\",\n  appId: \"1:701389143848:web:3cc71c72b92baac7d55a1d\",\n  measurementId: \"G-RNTHBZZKJ2\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst auth = getAuth(app);\n\n// Define signInWithGoogle\nconst provider = new GoogleAuthProvider();\nconst signInWithGoogle = () => signInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n// Export auth and signInWithGoogle\nexport { auth, signInWithGoogle };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAE5E,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;;AAEzC;AACA,MAAMS,IAAI,GAAGZ,OAAO,CAACW,GAAG,CAAC;;AAEzB;AACA,MAAME,QAAQ,GAAG,IAAIX,kBAAkB,CAAC,CAAC;AACzC,MAAMY,gBAAgB,GAAGA,CAAA,KAAMb,eAAe,CAACW,IAAI,EAAEC,QAAQ,CAAC,CAC3DE,IAAI,CAAEC,MAAM,IAAK;EAChB;EACA,MAAMC,UAAU,GAAGf,kBAAkB,CAACgB,oBAAoB,CAACF,MAAM,CAAC;EAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;EACpC;EACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;EACxB;AACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;EAClB;EACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;EAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;EAClC;EACA,MAAMC,KAAK,GAAGL,KAAK,CAACK,KAAK;EACzB;EACA,MAAMX,UAAU,GAAGf,kBAAkB,CAAC2B,mBAAmB,CAACN,KAAK,CAAC;EAChE;AACF,CAAC,CAAC;;AAEJ;AACA,SAASX,IAAI,EAAEE,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}